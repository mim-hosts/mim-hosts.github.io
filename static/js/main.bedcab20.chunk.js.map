{"version":3,"sources":["Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","header","backgroundColor","height","logo","fontFamily","fontWeight","color","paddingBottom","fontSize","Header","appLogo","Link","href","style","textDecoration","Typography","className","AppBar","Toolbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGMA,EAAYC,aAAW,iBAAO,CAChCC,OAAQ,CACJC,gBAAiB,UACjBC,OAAQ,QAEZC,KAAM,CACFC,WAAY,4BACZC,WAAY,IACZC,MAAO,OACPC,cAAe,WACfC,SAAU,eA0BHC,MAtBf,WAAmB,IAAD,EACWX,IAAjBE,EADM,EACNA,OAAQG,EADF,EACEA,KAMVO,EACF,cAACC,EAAA,EAAD,CAAMC,KAAK,8BAA8BC,MAAO,CAAEC,eAAgB,QAAlE,SACI,cAACC,EAAA,EAAD,CAAYC,UAAWb,EAAvB,mCAMR,OACI,iCACI,cAACc,EAAA,EAAD,CAAQD,UAAWhB,EAAnB,SAbG,cAACkB,EAAA,EAAD,UAAUR,SCTVS,MARf,WACI,OACI,qBAAKH,UAAU,MAAf,SACI,cAAC,EAAD,OCOGI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bedcab20.chunk.js","sourcesContent":["import {AppBar, Link, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#343a40\",\n        height: \"56px\"\n    },\n    logo: {\n        fontFamily: \"Titillium Web, sans-serif\",\n        fontWeight: 600,\n        color: \"#fff\",\n        paddingBottom: \".5125rem\",\n        fontSize: \"1.25rem\",\n    }\n}));\n\nfunction Header() {\n    const { header, logo } = useStyles();\n\n    const displayDesktop = () => {\n        return <Toolbar>{appLogo}</Toolbar>;\n    };\n\n    const appLogo = (\n        <Link href=\"https://mim-hosts.github.io\" style={{ textDecoration: 'none' }}>\n            <Typography className={logo}>\n                mim-hosts.github.io\n            </Typography>\n        </Link>\n    );\n\n    return (\n        <header>\n            <AppBar className={header}>{displayDesktop()}</AppBar>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}