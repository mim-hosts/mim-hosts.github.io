{"version":3,"sources":["Header/Header.tsx","Table/TableHeader/TableHeader.tsx","Table/commons.ts","Table/ClassButton/ClassButton.tsx","Table/Classes/Classes.tsx","Table/HostButton/HostButton.tsx","Table/TableRow/TableRow.tsx","Table/Table.tsx","themes.ts","GlobalStyles.js","Footer/Footer.tsx","App.tsx","useDarkMode.ts","reportWebVitals.ts","index.tsx","Table/TableRow/TableRow.module.scss","Table/Table.module.scss","Table/TableHeader/TableHeader.module.scss","Table/ClassButton/ClassButton.module.scss","Table/HostButton/HostButton.module.scss","Footer/Footer.module.scss"],"names":["useStyles","makeStyles","header","backgroundColor","height","logo","fontFamily","fontWeight","color","paddingBottom","fontSize","Header","isDark","onChange","toggle","style","sunColor","checked","size","appLogo","Link","href","textDecoration","Typography","className","AppBar","Toolbar","justifyContent","TableHeader","hosts","allHosts","Object","values","flatMap","colorInfo","upByOsMap","filter","host","up","map","os","reduce","res","set","get","Map","upByOs","fromEntries","styles","theadDark","scope","width","paddingLeft","length","keys","sort","charAt","toUpperCase","slice","replace","formatOs","join","STATIC_INFO","room","codename","type","processor","memory","graphics","NO_CLASS","DARK_COLORS","ClassButton","ongoing","entry","staticInfo","classTitle","key","Button","variant","disableRipple","disableElevation","classButton","title","includes","toLowerCase","undefined","getCurrentTime","currentDate","Date","String","getHours","padStart","getMinutes","StyledTooltip","withStyles","tooltip","Tooltip","Classes","classes","onAfterClasses","useState","currentTime","setCurrentTime","classesButtons","setClassesButtons","useEffect","interval","setInterval","REFRESH_INTERVAL_SECONDS","clearInterval","unshift","start","end","i","firstEnd","split","Number","firstEndTime","setHours","secondStart","splice","shift","entries","a","b","isTitleShortened","titleShortened","TITLE_MAX_LEN","substring","lastIndexOf","marginBottom","getButtons","HostButton","hostname","osLogo","enqueueSnackbar","useSnackbar","hostButton","cursor","onClick","navigator","clipboard","writeText","then","display","marginLeft","TableRow","hostsButtons","afterClasses","setAfterClasses","number","Boolean","invert","logoDarkColor","src","alt","macosLinuxLogo","linuxLogo","tableRow","isAfter","cx","hostsButtonsDuringClasses","Table","setHosts","rooms","setRooms","getHosts","axios","response","data","err","console","error","message","getClasses","tableResponsive","tableBordered","computerTypeInfo","computerTypeHosts","lightTheme","body","text","thBorderColor","darkTheme","GlobalStyles","createGlobalStyle","theme","Footer","footer","App","window","localStorage","getItem","setTheme","localTheme","setItem","useDarkMode","toggleTheme","themeMode","logVisit","useEffectOnce","maxSnack","disableWindowBlurListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d83e0a04.chunk.js","sourcesContent":["import {AppBar, Link, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport React, {FunctionComponent} from \"react\";\nimport {DarkModeSwitch} from \"react-toggle-dark-mode\";\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#343a40\",\n        height: \"56px\"\n    },\n    logo: {\n        fontFamily: \"Titillium Web, sans-serif\",\n        fontWeight: 600,\n        color: \"#fff\",\n        paddingBottom: \".5125rem\",\n        fontSize: \"1.25rem\",\n    }\n}));\n\nexport interface HeaderProps {\n    isDark: boolean;\n    onChange: () => void;\n}\n\nconst Header: FunctionComponent<HeaderProps> = ({\n    isDark,\n    onChange\n}) => {\n    const { header, logo } = useStyles();\n\n    const toggle = (\n        <div style={{ paddingBottom: '2px' }}>\n            <DarkModeSwitch\n                sunColor=\"white\"\n                checked={isDark}\n                onChange={onChange}\n                size={35}\n            />\n        </div>\n    )\n\n    const displayDesktop = () => {\n        return (\n            <Toolbar style={{ justifyContent: 'space-between' }}>\n                {appLogo}\n                {toggle}\n            </Toolbar>\n        );\n    };\n\n    const appLogo = (\n        <Link href=\"https://mim-hosts.github.io\" style={{ textDecoration: 'none' }}>\n            <Typography className={logo}>\n                mim-hosts.github.io\n            </Typography>\n        </Link>\n    );\n\n    return (\n        <AppBar className={header}>{displayDesktop()}</AppBar>\n    );\n}\n\nexport default Header;\n","import React, {FunctionComponent} from 'react';\nimport styles from './TableHeader.module.scss';\nimport {HostInfo, HostsInfo} from \"../Table\";\n\nexport interface TableHeaderProps {\n    hosts?: HostsInfo;\n}\n\ninterface OsInfo {\n    [os: string]: number;\n}\n\nconst formatOs = (os: string) => {\n    const capitalized = os.charAt(0).toUpperCase() + os.slice(1);\n    return capitalized.replace('os', 'OS');\n}\n\nconst TableHeader: FunctionComponent<TableHeaderProps> = ({\n    hosts = {}\n}) => {\n    const allHosts: HostInfo[] = Object.values(hosts)\n        .flatMap(colorInfo => Object.values(colorInfo));\n    const upByOsMap = allHosts\n        .filter(host => host.up)\n        .map(host => host.os)\n        .reduce((res, os) => res.set(os, (res.get(os) || 0) + 1), new Map());\n    const upByOs: OsInfo = Object.fromEntries(upByOsMap);\n    return (\n        <thead className={styles.theadDark}>\n            <tr>\n                <th scope=\"col\" style={{ width: \"30px\" }}>Sala</th>\n                <th scope=\"col\" style={{ width: \"30px\" }}>Nazwa</th>\n                <th scope=\"col\" style={{ width: \"200px\" }}>Typ komputera</th>\n                <th scope=\"col\" style={{ width: \"170px\" }}>Procesor</th>\n                <th scope=\"col\" style={{ width: \"30px\" }}>RAM</th>\n                <th scope=\"col\" style={{ width: \"150px\" }}>Grafika</th>\n                <th scope=\"col\" style={{ width: \"200px\" }}>Zajęcia</th>\n                <th scope=\"col\" style={{ width: \"340px\"}}>\n                    <div style={{ paddingLeft: \"6px\" }}>\n                        {`Hosty${allHosts.length ? ` (${\n                            Object.keys(upByOs)\n                                .sort()\n                                .map(os => `${formatOs(os)} - ${upByOs[os]}`)\n                                .join(', ')\n                        })` : ''}`}\n                    </div>\n                </th>\n            </tr>\n        </thead>\n    );\n}\n\nexport default TableHeader;\n","export interface ComputerTypeInfo {\n    room: number,\n    codename: string,\n    type: string,\n    processor: string,\n    memory: string,\n    graphics: string,\n    color: string\n}\n\nexport const STATIC_INFO = (isDark: boolean): ComputerTypeInfo[] => [\n    {\n        room: 2041,\n        codename: \"Red\",\n        type: \"Apple iMac Late 2013\",\n        processor: \"Intel Core i5-4570\",\n        memory: \"8GB\",\n        graphics: \"nVidia GeForce GT755M Mac Edition [GK107M]\",\n        color: \"red\"\n    },\n    {\n        room: 2042,\n        codename: \"Pink\",\n        type: \"Dell Precision Tower 3620\",\n        processor: \"Intel Xeon E3-1240 v6\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"rgb(255, 102, 255)\"\n    },\n    {\n        room: 2043,\n        codename: \"Orange\",\n        type: \"Dell Precision Tower 3620\",\n        processor: \"Intel Xeon E3-1240 v6\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"orange\"\n    },\n    {\n        room: 2044,\n        codename: \"Brown\",\n        type: \"Dell Precision Tower 3620\",\n        processor: \"Intel Xeon E3-1240 v6\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"brown\"\n    },\n    {\n        room: 2045,\n        codename: \"Green\",\n        type: \"Dell Precision Tower 1700\",\n        processor: \"Intel Xeon E3-1220 v3\",\n        memory: \"8GB\",\n        graphics: \"nVidia NVS 315 [GF119]\",\n        color: \"green\"\n    },\n    {\n        room: 3041,\n        codename: \"Khaki\",\n        type: \"Dell Precision Tower 3630\",\n        processor: \"Intel Core i5-8500\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"rgb(173, 169, 110)\"\n    },\n    {\n        room: 3042,\n        codename: \"White\",\n        type: \"Dell Precision Tower 3630\",\n        processor: \"Intel Core i5-8500\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: isDark ? \"white\" : \"#212529\"\n    },\n    {\n        room: 3043,\n        codename: \"Cyan\",\n        type: \"Dell Precision Tower 3630\",\n        processor: \"Intel Core i5-8500\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"cyan\"\n    },\n    {\n        room: 3044,\n        codename: \"Blue\",\n        type: \"Dell Precision Tower 3630\",\n        processor: \"Intel Core i5-8500\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"blue\"\n    },\n    {\n        room: 3045,\n        codename: \"Violet\",\n        type: \"Dell Precision Tower 3630\",\n        processor: \"Intel Core i5-8500\",\n        memory: \"16GB\",\n        graphics: \"nVidia Quadro P400 [GP107GL]\",\n        color: \"violet\"\n    }\n];\n\nexport interface ClassInfo {\n    start: string;\n    end: string;\n    title: string;\n}\n\nexport const NO_CLASS = 'brak zajęć';\nexport const AFTER_CLASSES = 'Zajęcia skończyły się';\n\nexport const DARK_COLORS = ['brown', 'white', 'blue', 'red', 'green'];\n","import React from 'react';\nimport {Button} from \"@material-ui/core\";\nimport {ClassInfo, ComputerTypeInfo, DARK_COLORS, NO_CLASS} from \"../commons\";\nimport styles from './ClassButton.module.scss';\n\nconst ClassButton = (\n    ongoing: boolean,\n    entry: ClassInfo,\n    staticInfo: ComputerTypeInfo,\n    classTitle: string,\n    key?: string\n) => (\n    <Button\n        key={key}\n        variant=\"contained\"\n        disableRipple\n        disableElevation\n        className={styles.classButton}\n        style={{\n            backgroundColor: entry.title === NO_CLASS ? '#e0e0e0' : (ongoing ? staticInfo.color : '#7a7a7a'),\n            color: (DARK_COLORS.includes(staticInfo.codename.toLowerCase())\n                    && ongoing\n                    && entry.title !== NO_CLASS\n                    && staticInfo.color !== \"white\")\n                || (!ongoing && entry.title !== NO_CLASS)\n                ? \"white\"\n                : undefined,\n        }}\n    >\n        {classTitle}\n    </Button>\n)\n\nexport default ClassButton;\n","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {Tooltip, withStyles} from \"@material-ui/core\";\nimport {AFTER_CLASSES, ClassInfo, ComputerTypeInfo, NO_CLASS} from \"../commons\";\nimport ClassButton from \"../ClassButton/ClassButton\";\n\nconst REFRESH_INTERVAL_SECONDS = 5;\nconst TITLE_MAX_LEN = 56;\n\nconst getCurrentTime = () => {\n    const currentDate = new Date();\n    return String(currentDate.getHours()).padStart(2, '0')\n        + \":\"\n        + String(currentDate.getMinutes()).padStart(2, '0');\n};\n\nconst StyledTooltip = withStyles({\n    tooltip: {\n        fontSize: '1em',\n        fontFamily: 'Titillium Web, sans-serif',\n        fontWeight: 600,\n    }\n})(Tooltip);\n\nconst getButtons = (\n    currentTime: string,\n    staticInfo: ComputerTypeInfo,\n    onAfterClasses: (isAfter: boolean) => void,\n    classes?: ClassInfo[]\n) => {\n    let classesButtons;\n    if (classes) {\n        classes.unshift({\n            start: '00:00',\n            end: '08:30',\n            title: NO_CLASS\n        });\n\n        for (let i = classes.length - 2; i >= 0; --i) {\n            const firstEnd = classes[i].end.split(':').map(Number);\n            const firstEndTime = new Date().setHours(firstEnd[0], firstEnd[1], 0, 0);\n            const secondStart = classes[i + 1].start.split(':').map(Number);\n            const secondStartTime = new Date().setHours(secondStart[0], secondStart[1], 0, 0);\n            const diff = (secondStartTime - firstEndTime) / (1000 * 60);\n            if (diff > 30) {\n                classes.splice(i + 1, 0, {\n                    start: classes[i].end,\n                    end: classes[i + 1].start,\n                    title: NO_CLASS\n                });\n            }\n        }\n\n        classes.shift();\n\n        const entries = classes.filter((entry) => {\n            return entry.end > currentTime;\n        }).sort((a,b) =>\n            (a.start > b.start) ? 1 : ((b.start > a.start) ? -1 : 0)\n        );\n\n        entries.splice(2);\n\n        classesButtons = entries.map((entry) => {\n            const ongoing = entry.start <= currentTime && currentTime < entry.end;\n            const isTitleShortened = entry.title.length > TITLE_MAX_LEN;\n            const titleShortened = entry.title.slice(0, TITLE_MAX_LEN - 3);\n            const title = isTitleShortened\n                ? `${titleShortened.substring(0, titleShortened.lastIndexOf(' '))} ...`\n                : entry.title;\n            return (\n                <div\n                    key={`${entry.start}-${entry.end}-${entry.title}`}\n                    style={{ marginBottom: '10px' }}\n                >\n                    <div style={{ fontWeight: 'bold' }}>\n                        {entry.start} - {entry.end}\n                    </div>\n                    {isTitleShortened\n                        ? (\n                            <StyledTooltip\n                                key={`${entry.start}${entry.end}${entry.title}`}\n                                title={entry.title}\n                            >\n                                {ClassButton(ongoing, entry, staticInfo, title)}\n                            </StyledTooltip>\n                        )\n                        : ClassButton(ongoing, entry, staticInfo, title, `${entry.start}${entry.end}${entry.title}`)\n                    }\n                </div>\n            )\n        });\n\n        onAfterClasses(classesButtons.length === 0);\n\n        if (classesButtons.length === 0) {\n            classesButtons = AFTER_CLASSES;\n        }\n    } else {\n        classesButtons = 'Loading...';\n    }\n    return classesButtons;\n}\n\nexport interface ClassesProps {\n    staticInfo: ComputerTypeInfo;\n    classes?: ClassInfo[];\n    onAfterClasses: (isAfter: boolean) => void;\n}\n\nconst Classes: FunctionComponent<ClassesProps> = ({\n    staticInfo,\n    classes,\n    onAfterClasses\n}) => {\n    const [currentTime, setCurrentTime] = useState<string>(getCurrentTime());\n    const [classesButtons, setClassesButtons] = useState<string | JSX.Element[]>('Loading...');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentTime(getCurrentTime());\n        },REFRESH_INTERVAL_SECONDS * 1000);\n        return () => clearInterval(interval)\n    });\n\n    useEffect(() => {\n        setClassesButtons(getButtons(currentTime, staticInfo, onAfterClasses, classes));\n    }, [currentTime, staticInfo, classes, onAfterClasses]);\n\n    return (\n        <>\n            {classesButtons}\n        </>\n    );\n}\n\nexport default Classes;\n","import React, {FunctionComponent} from 'react';\nimport {Button} from \"@material-ui/core\";\nimport styles from './HostButton.module.scss';\nimport {Entry} from \"../TableRow/TableRow\";\nimport {useSnackbar} from \"notistack\";\nimport {ComputerTypeInfo, DARK_COLORS} from \"../commons\";\n\nexport interface HostButtonProps {\n    hostname: string;\n    entry: Entry;\n    staticInfo: ComputerTypeInfo;\n    osLogo: JSX.Element;\n}\n\nconst HostButton: FunctionComponent<HostButtonProps> = ({\n    hostname,\n    entry,\n    staticInfo,\n    osLogo\n}) => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    return (\n        <Button\n            key={hostname}\n            variant=\"contained\"\n            disableRipple={!entry.up}\n            disableElevation\n            className={styles.hostButton}\n            style={{\n                backgroundColor: entry.up ? staticInfo.color : '#7a7a7a',\n                color: !entry.up || (\n                            DARK_COLORS.includes(staticInfo.codename.toLowerCase())\n                            && entry.up && staticInfo.color !== \"white\"\n                    ) ? \"white\"\n                    : undefined,\n                cursor: !entry.up ? 'initial' : undefined\n            }}\n            onClick={entry.up ? () => {\n                if (navigator && navigator.clipboard) {\n                    navigator.clipboard.writeText(hostname).then();\n                    enqueueSnackbar(`Hostname \"${hostname}\" copied to clipboard`, {\n                        variant: 'success',\n                    });\n                }\n            } : undefined}\n        >\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                {hostname}\n                <div style={{ marginLeft: '2px', marginBottom: '-5px' }}>\n                    {osLogo}\n                </div>\n            </div>\n        </Button>\n    )\n}\n\nexport default HostButton;\n","import React, {FunctionComponent, useState} from 'react';\nimport {ColorInfo} from \"../Table\";\nimport Classes from \"../Classes/Classes\";\nimport styles from './TableRow.module.scss';\nimport HostButton from \"../HostButton/HostButton\";\nimport {ClassInfo, ComputerTypeInfo, DARK_COLORS} from \"../commons\";\nimport cx from 'classnames';\n\nexport interface TableRowProps {\n    staticInfo: ComputerTypeInfo;\n    hosts?: ColorInfo;\n    classes?: ClassInfo[]\n}\n\nconst windowsLogo = (invert?: boolean) => (\n    <img width='20px' style={{\n        filter: invert ? 'invert(100%)' : undefined,\n        marginBottom: '-5px'\n    }} src={process.env.PUBLIC_URL + '/windows.svg'} alt='windows'/>\n);\n\nconst linuxLogo = (invert?: boolean) => (\n    <img width='20px' style={{\n        filter: invert ? 'invert(100%)' : undefined,\n        marginBottom: '-5px'\n    }} src={process.env.PUBLIC_URL + '/linux.svg'} alt='linux'/>\n);\n\nconst macosLinuxLogo = (invert?: boolean) => (\n    <div style={{ marginBottom: '6px' }}>\n        <img width='16px' style={{\n            filter: invert ? 'invert(100%)' : undefined,\n            marginBottom: '-2px'\n        }} src={process.env.PUBLIC_URL + '/macos.svg'} alt='macos'/>\n        /\n        <img width='16px' style={{\n            filter: invert ? 'invert(100%)' : undefined,\n            marginBottom: '-2px'\n        }} src={process.env.PUBLIC_URL + '/linux.svg'} alt='linux'/>\n    </div>\n);\n\nexport interface Entry {\n    number: string;\n    up: boolean;\n    os: string;\n}\n\nconst TableRow: FunctionComponent<TableRowProps> = ({\n    staticInfo,\n    hosts,\n    classes\n}) => {\n    const [afterClasses, setAfterClasses] = useState<boolean>(false);\n\n    let hostsButtons;\n\n    if (hosts) {\n        const entries: Entry[] = Object.entries(hosts).map((entry) => (\n            {\n                number: entry[0],\n                up: Boolean(entry[1].up),\n                os: entry[1].os || ''\n            }\n        )).sort((a,b) =>\n            (a.number > b.number) ? 1 : ((b.number > a.number) ? -1 : 0)\n        );\n        hostsButtons = entries.map((entry) => {\n            const hostname = `${staticInfo.codename.toLowerCase()}${entry.number}`;\n            const logoDarkColor = DARK_COLORS.includes(staticInfo.codename.toLowerCase()) && staticInfo.color !== \"white\";\n            const osLogo = entry.up ? (\n                entry.os === 'windows'\n                    ? windowsLogo(logoDarkColor)\n                    : staticInfo.codename.toLowerCase() === 'red'\n                    ? macosLinuxLogo(logoDarkColor)\n                    : linuxLogo(logoDarkColor)\n            ) : <div style={{ width: '26px' }} />;\n            return (\n                <HostButton\n                    key={hostname}\n                    hostname={hostname}\n                    entry={entry}\n                    staticInfo={staticInfo}\n                    osLogo={osLogo}\n                />\n            )\n        })\n    } else {\n        hostsButtons = 'Loading...'\n    }\n\n    return (\n        <tr className={styles.tableRow}>\n            <td>{staticInfo.room}</td>\n            <td style={{ color: staticInfo.color }}>{staticInfo.codename}</td>\n            <td>{staticInfo.type}</td>\n            <td>{staticInfo.processor}</td>\n            <td>{staticInfo.memory}</td>\n            <td>{staticInfo.graphics}</td>\n            <td>\n                <div className={styles.classes}>\n                    <Classes\n                        staticInfo={staticInfo}\n                        classes={classes}\n                        onAfterClasses={(isAfter => {\n                            setAfterClasses(isAfter);\n                        })}\n                    />\n                </div>\n            </td>\n            <td>\n                {typeof hostsButtons === 'string'\n                    ? (hostsButtons)\n                    : (\n                        <div className={cx(styles.hostsButtons, {\n                            [styles.hostsButtonsDuringClasses]: !afterClasses\n                        })}>\n                            {hostsButtons}\n                        </div>\n                    )\n                }\n            </td>\n        </tr>\n    );\n}\n\nexport default TableRow;\n","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport styles from './Table.module.scss';\nimport TableRow from \"./TableRow/TableRow\";\nimport axios from \"axios\";\nimport {ClassInfo, STATIC_INFO} from \"./commons\";\n\nconst REFRESH_INTERVAL_SECONDS = 15;\n\nexport interface HostInfo {\n    up: boolean;\n    os?: string;\n}\n\nexport interface ColorInfo {\n    [index: number]: HostInfo\n}\n\nexport interface HostsInfo {\n    [color: string]: ColorInfo;\n}\n\ninterface RoomsInfo {\n    [room: number]: ClassInfo[];\n}\n\nexport interface TableProps {\n    isDark: boolean;\n}\n\nconst Table: FunctionComponent<TableProps> = ({\n    isDark\n}) => {\n    const [hosts, setHosts] = useState<HostsInfo>();\n    const [rooms, setRooms] = useState<RoomsInfo>();\n\n    const getHosts = async () => {\n        try {\n            axios.get<HostsInfo>('https://students.mimuw.edu.pl/~kr394714/mim-hosts/')\n                .then(response => {\n                    setHosts(response.data);\n                });\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    const getClasses = async () => {\n        try {\n            axios.get<RoomsInfo>('https://students.mimuw.edu.pl/~kr394714/mim-hosts/rooms/')\n                .then(response => {\n                    setRooms(response.data);\n                });\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n        getHosts().then();\n        getClasses().then();\n        const interval = setInterval(() => {\n            getHosts().then();\n            getClasses().then();\n        },REFRESH_INTERVAL_SECONDS * 1000);\n        return () => clearInterval(interval)\n    },[]);\n\n    return (\n        <div className={styles.tableResponsive}>\n            <table className={styles.tableBordered}>\n                <TableHeader\n                    hosts={hosts}\n                />\n                <tbody>\n                {STATIC_INFO(isDark).map((computerTypeInfo) => {\n                    const computerTypeHosts = hosts ? hosts[computerTypeInfo.codename.toLowerCase()] : undefined;\n                    const classes = rooms ? rooms[computerTypeInfo.room] : undefined;\n                    return (\n                        <TableRow\n                            key={computerTypeInfo.codename.toLowerCase()}\n                            staticInfo={computerTypeInfo}\n                            hosts={computerTypeHosts}\n                            classes={classes}\n                        />\n                    )\n                })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;\n","export const lightTheme = {\n    body: 'white',\n    text: '#212529',\n    thBorderColor: '#454d55'\n}\n\nexport const darkTheme = {\n    body: '#303030',\n    text: 'white',\n    thBorderColor: '#dee2e6'\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    font-family: 'Titillium Web', sans-serif;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n\n  th {\n    border: 1px solid ${({ theme }) => theme.thBorderColor};\n  }\n\n  .App {\n    text-align: center;\n  }\n`\n","import React from 'react';\nimport styles from './Footer.module.scss';\n\nfunction Footer() {\n    return (\n        <div className={styles.footer}>\n            Kontakt: <a href=\"mailto:k.rokicki@students.mimuw.edu.pl\">k.rokicki@students.mimuw.edu.pl</a>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from \"./Header/Header\";\nimport Table from \"./Table/Table\";\nimport {ThemeProvider} from \"styled-components\";\nimport { useDarkMode } from './useDarkMode';\nimport {darkTheme, lightTheme} from \"./themes\";\nimport {GlobalStyles} from \"./GlobalStyles\";\nimport { SnackbarProvider } from 'notistack';\nimport Footer from \"./Footer/Footer\";\nimport axios from \"axios\";\nimport {useEffectOnce} from \"react-use\";\n\nfunction App() {\n    const [theme, toggleTheme] = useDarkMode();\n    const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n    const logVisit = async () => {\n        try {\n            await axios.get('https://students.mimuw.edu.pl/~kr394714/mim-hosts/visits/');\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffectOnce(() => {\n        logVisit().then();\n    });\n\n    return (\n        <SnackbarProvider maxSnack={2} disableWindowBlurListener>\n            <ThemeProvider theme={themeMode}>\n                <>\n                    <GlobalStyles />\n                    <div className=\"App\">\n                        <Header isDark={theme === 'dark'} onChange={toggleTheme}/>\n                        <Table isDark={theme === 'dark'}/>\n                        <Footer />\n                    </div>\n                </>\n            </ThemeProvider>\n        </SnackbarProvider>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = (): [string, (() => void)] => {\n    const [theme, setTheme] = useState(window.localStorage.getItem('theme') || 'dark');\n\n    const toggleTheme = () => {\n        if (theme === 'light') {\n            window.localStorage.setItem('theme', 'dark')\n            setTheme('dark')\n        } else {\n            window.localStorage.setItem('theme', 'light')\n            setTheme('light')\n        }\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme);\n    }, []);\n\n    return [theme, toggleTheme];\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"TableRow_tableRow__F3VnF\",\"classes\":\"TableRow_classes__3PfM9\",\"hostsButtons\":\"TableRow_hostsButtons__fQQGn\",\"hostsButtonsDuringClasses\":\"TableRow_hostsButtonsDuringClasses__SYE7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableResponsive\":\"Table_tableResponsive__2TNAy\",\"tableBordered\":\"Table_tableBordered__xVRor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theadDark\":\"TableHeader_theadDark__34kXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classButton\":\"ClassButton_classButton__es_Pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hostButton\":\"HostButton_hostButton__1EB-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1lA4x\"};"],"sourceRoot":""}